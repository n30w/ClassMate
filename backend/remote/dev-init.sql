-- Initial setup
CREATE EXTENSION IF NOT EXISTS "citext";
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Users Table
CREATE TABLE IF NOT EXISTS users (
                                     id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
                                     net_id VARCHAR UNIQUE,
                                     created_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                                     updated_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                                     deleted_at TIMESTAMP WITHOUT TIME ZONE,
                                     full_name VARCHAR,
                                     profile_picture_id UUID,
                                     bio TEXT,
                                     username VARCHAR NOT NULL,
                                     password VARCHAR NOT NULL,
                                     email VARCHAR NOT NULL,
                                     membership INT NOT NULL
);

-- Media Table
CREATE TABLE IF NOT EXISTS media (
                                     id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                                     type VARCHAR NOT NULL,
                                     url VARCHAR NOT NULL,
                                     created_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                                     updated_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                                     user_net_id VARCHAR REFERENCES users(net_id)
);

-- Projects Table
CREATE TABLE IF NOT EXISTS projects (
                                        id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                                        name VARCHAR NOT NULL,
                                        description TEXT,
                                        created_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                                        updated_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                                        user_net_id VARCHAR REFERENCES users(net_id)
);

-- Courses Table
CREATE TABLE IF NOT EXISTS courses (
                                       id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                                       title VARCHAR NOT NULL,
                                       description TEXT,
                                       created_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                                       updated_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                                       user_net_id VARCHAR REFERENCES users(net_id)
);

-- Foreign key for profile picture which relates to the Media table
ALTER TABLE users ADD CONSTRAINT fk_profile_picture
    FOREIGN KEY (profile_picture_id)
        REFERENCES media (id)
        ON DELETE SET NULL;

-- Insert test user with membership represented as an integer
INSERT INTO users (net_id, created_at, updated_at, username, password, email, membership, full_name) VALUES 
    ('abc123', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'jcena', 'password123', 'abc123@nyu.edu', 0, 'John Cena');
INSERT INTO users (net_id, created_at, updated_at, username, password, email, membership, full_name) VALUES
    ('xyz789', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'mmiller', 'mypass789', 'xyz789@example.com', 1, 'Mike Miller');
INSERT INTO users (net_id, created_at, updated_at, username, password, email, membership, full_name) VALUES 
    ('def456', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'ajackson', 'pass456', 'def456@example.com', 0, 'Alice Jackson');
INSERT INTO users (net_id, created_at, updated_at, username, password, email, membership, full_name) VALUES
    ('uvw321', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'ksmith', 'pass321', 'uvw321@example.com', 1, 'Kevin Smith');
INSERT INTO users (net_id, created_at, updated_at, username, password, email, membership, full_name) VALUES 
    ('ghi987', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'jdoe', 'mysecretpass', 'ghi987@example.com', 0, 'Jane Doe');
INSERT INTO users (net_id, created_at, updated_at, username, password, email, membership, full_name) VALUES
    ('efg678', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'ppatel', 'passwordabc', 'efg678@example.com', 1, 'Priya Patel');
INSERT INTO users (net_id, created_at, updated_at, username, password, email, membership, full_name) VALUES 
    ('mno456', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'wsmith', 'password456', 'mno456@example.com', 0, 'William Smith');
INSERT INTO users (net_id, created_at, updated_at, username, password, email, membership, full_name) VALUES
    ('qrs789', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'cjohnson', 'mysecret789', 'qrs789@example.com', 1, 'Chris Johnson');
INSERT INTO users (net_id, created_at, updated_at, username, password, email, membership, full_name) VALUES 
    ('tuv123', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'rthompson', 'pass123abc', 'tuv123@example.com', 0, 'Rachel Thompson');
INSERT INTO users (net_id, created_at, updated_at, username, password, email, membership, full_name) VALUES
    ('nop789', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'bbrown', 'passwordnop', 'nop789@example.com', 1, 'Brian Brown');
INSERT INTO users (net_id, created_at, updated_at, username, password, email, membership, full_name) VALUES 
    ('wxy123', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'lwilliams', 'passwordwxy', 'wxy123@example.com', 0, 'Laura Williams');


SELECT * FROM users;